---
export interface Props {
  title?: string;
  favicon?: string;
  description?: string;
  author?: string;
  generator?: string;
  canonical?: string;
}

const {
  title,
  description,
  favicon,
  author,
  generator,
  canonical,
} = Astro.props;
import "@fontsource-variable/inter";
import "@fontsource-variable/fira-code";
import "@/styles/global.css";
// import "/styles/ch-style.css"

// modified from original implementation to support unmounting react roots before replacing
import ViewTransitions from '@/components/ViewTransitions';

---

<html lang="zh-CN">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    {description && <meta name="description" content={description} />}
    {author && <meta name="author" content={author} />}
    {generator && <meta name="generator" content={generator} />}
    {canonical && <link rel="canonical" href={canonical} />}
    <link rel="icon" href={favicon} />
    {title && <title>{title}</title>}
    <script is:inline>
      (function() {
        const storedTheme = JSON.parse(window.localStorage.getItem('theme') ?? '"auto"');
        let presetTheme;
        if (storedTheme === 'auto') {
          presetTheme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
        } else {
          presetTheme = storedTheme;
        }
        if (presetTheme === 'dark') {
          document.documentElement.classList.add('dark');
        } else {
          document.documentElement.classList.remove('dark');
        }
        document.documentElement.style.colorScheme = presetTheme;
      })()
    </script>
    <ViewTransitions />
    <slot name="head" />
  </head>
  <body class="min-h-screen flex flex-col">
    <noscript><b>Enable JavaScript to run this website.</b></noscript>
    <slot />
  </body>
</html>

<script>
// hack method to unmount react roots before replacing
// consider a better way to do this
import { hydrateRoot } from 'react-dom/client';
function isAlreadyHydrated(element: Element) {
  for (const key in element) {
    if (key.startsWith('__reactContainer')) {
      return key;
    }
  }
}
document.addEventListener('astro:beforeReplace', (...args) => {
  document.querySelectorAll('astro-island').forEach((element) => {
    const rootKey = isAlreadyHydrated(element);
    if(rootKey) {
      const root = hydrateRoot(document.createElement('div'), null);
      (root as any)._internalRoot =  (element as any)[rootKey].stateNode;
      root.unmount();
    }
  })
})
</script>