---
import ReactSidebar from './Sidebar';

import Profile from '@/components/Profile';
import TagCloud from '@/components/TagCloud';
import CategoryTree from '@/components/CategoryTree';
import Toc from '@/components/Toc';
import type { SidebarConfig } from '.';
export interface Props {
  config: SidebarConfig;
  class?: string;
  showSidebarOnDesktop?: boolean;
}

const { 
  config, 
  showSidebarOnDesktop, 
  class: className,
} = Astro.props;

const { widgets } = config;
---
<ReactSidebar className={className} showSidebarOnDesktop={showSidebarOnDesktop} client:load>
  <div class="flex flex-col gap-3">
    {widgets?.map(async widget => {
      if (widget.show === false) {
        return null;
      }
      switch (widget.name) {
        case 'component':
          const { name, title, show, ...props} = widget;
          const Component = 'then' in widget.component ? (await widget.component).default : widget.component;
          return (
            <Component {...props} />
          );
        case 'profile': {
          const { name, title, show, ...props} = widget;
          return (
            <Profile {...props} />
          );
        }

        case 'tag-cloud': {
          const { name, title, show, ...props} = widget;
          return (
            <TagCloud {...props} />
          );
        }

        case 'category-tree': {
          const { name, title, show, ...props} = widget;
          return (
            <CategoryTree {...props} client:load />
          );
        }
        case 'toc': {
          const { name, title, show, ...props} = widget;
          return (
            <Toc {...props} client:load />
          );
        }
        default:
          return null;
      }
    })}
  </div>
</ReactSidebar>