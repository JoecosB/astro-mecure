---
import { twMerge } from 'tailwind-merge';

import Image from '@/components/Image';
import type { ImageMetadata } from 'astro';

import type { Page, Post } from '@/types';
import type { HTMLAttributes } from 'astro/types';
// import Background from './Background';
import PostMeta from './PostMeta';
interface HeroPostInfo {
  type: 'post',
  date: Post['date'],
  updateDate: Post['updateDate'],
  draft: Post['draft'],
  category: Post['category'],
  tags: Post['tags'],
  author: Post['author'],
  readingTime: Post['readingTime'],
  wordCount: Post['wordCount'],
}

interface HeroCategoriesInfo {
  type: 'categories',
  count: number,
}

interface HeroTagsInfo {
  type: 'tags',
  count: number,
}

interface HeroPostsInfo {
  type: 'posts',
  count: number,
}

interface HeroArchiveInfo {
  type: 'archive',
  count: number,
}

type HeroInfo = HeroPostInfo | HeroCategoriesInfo | HeroTagsInfo | HeroPostsInfo | HeroArchiveInfo;


export interface HeroConfig {
  bg: ImageMetadata | string;
  title?: string;
  description?: string;
  logo?: ImageMetadata | string;
  info?: HeroInfo,
}

export interface HeroProps extends HTMLAttributes<'div'> {
  config: HeroConfig;
}


export type Props = HeroProps;

const {
  config,
  class: className,
  ...rest
} = Astro.props;

const {
  bg,
  title,
  description,
  logo,
  info
} = config;
---
<header class={twMerge(
  className
)} {...rest}>
  <div class='w-full h-full overflow-hidden rounded-xl relative plate-bg plate-shadow border-highlight'>
    <!-- <Background bg={bg} client:load /> -->
    <Image src={bg} class='w-full h-full select-none' alt='background' />

    <div class='absolute inset-0 p-4 md:p-8 flex flex-col justify-center items-center text-white pointer-events-none'>
      {title 
        ? <h1 class='text-2xl md:text-4xl mb-2 font-bold text-center break-words drop-shadow-[0px_2px_3px_rgb(31,41,55,.5)] pointer-events-auto'>{title}</h1> 
        : (logo && (
            <Image src={logo} alt='cover' class='h-24 md:h-28 drop-shadow-[0px_2px_3px_rgb(31,41,55,.5)]' />
          )
        )
      }
      {!info && description && <div class='mt-4 bg-black/50 rounded-xl text-xs px-2 py-[0.1875rem] shadow-md'>{description}</div>}
      {info?.type === 'post' && <PostMeta client:load {...info} />}
      {info?.type === 'categories' && (
        <div class='flex flex-wrap justify-center mt-4 bg-black/50 rounded-xl text-xs px-2 py-[0.1875rem] shadow-md'>
          <div class=''>共{info.count}个分类</div>
        </div>
      )}
      {info?.type === 'tags' && (
        <div class='flex flex-wrap justify-center mt-4 bg-black/50 rounded-xl text-xs px-2 py-[0.1875rem] shadow-md'>
          <div class=''>共{info.count}个标签</div>
        </div>
      )}
      {info?.type === 'posts' && (
        <div class='flex flex-wrap justify-center mt-4 bg-black/50 rounded-xl text-xs px-2 py-[0.1875rem] shadow-md'>
          <div class=''>共{info.count}篇文章</div>
        </div>
      )}
      {info?.type === 'archive' && (
        <div class='flex flex-wrap justify-center mt-4 bg-black/50 rounded-xl text-xs px-2 py-[0.1875rem] shadow-md'>
          <div class=''>共{info.count}篇文章</div>
        </div>
      )}
    </div>
  </div>
</header>